
name: Node.js CI

on:
  push:
    branches: [ develop, main ]

  pull_request:
    types: [opened, closed]
    branches: [ develop, main ]

env:
  ENCRYPTION_KEY : ${{secrets.ENCRYPTION_KEY}}
  
jobs:
    
  PR-Or-Any-New-pushes:
    if: github.event.pull_request.merged == false || github.event_name == 'push'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 15.x, 16.x]
  
    steps:
    - uses: actions/checkout@v2
      with:
        ref : ${{ github.head_ref }} # branch name on which this CI will run

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - run: |
        touch .env
        echo "DB_NAME=${DB_NAME}" >> .env
        echo "DB_HOST=${DB_HOST}" >> .env
        echo "DB_DIALECT=${DB_DIALECT}" >> .env
        echo "NODE_ENV=${NODE_ENV}" >> .env
        echo "APP_PORT=${APP_PORT}" >> .env
        echo "SECRET=${SECRET}" >> .env
        echo "ENCRYPTION_KEY=${ENCRYPTION_KEY}" >> .env
 
    - run: sudo chmod ugoa+x *.sh
    - run: sudo ./MongoDB-Setup.sh
    - run: sudo apt-get install redis-server
    - run: sudo npm install --unsafe-perm
    - run: sudo npm test

    # - run: sudo npm run test 

    # - name: Continous Code Delivery to Live Server
    #   uses: appleboy/ssh-action@master
    #   with:
    #       host: ${{secrets.LIVE_SERVER_IP_ADDRESS}}
    #       username: ubuntu
    #       key: ${{secrets.SSH_PRIV_KEY}}
    #       port: 22
    #       script: |
    #         cd NodeJs-MongoDB-Mongoose-Express-SocketIO-Boilerplate            
    #         sudo git pull
  
